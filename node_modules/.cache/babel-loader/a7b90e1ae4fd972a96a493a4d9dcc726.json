{"ast":null,"code":"import axios from 'axios';\naxios.defaults.baseURL = 'https://trade.cryptool.net:8088/';\naxios.defaults.headers.common['time'] = new Date().getTime();\naxios.interceptors.request.use(config => {\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(response => response, error => Promise.resolve(error.response));\naxios.defaults.withCredentials = false;\n\nfunction checkStatus(response) {\n  if (response.status === 200 || response.status === 304) {\n    return response.data;\n  }\n\n  return {\n    code: -404,\n    message: response.statusText,\n    data: response.statusText\n  };\n}\n\nfunction checkCode(res) {\n  if (res.code !== 200 && res.message) {}\n\n  return res;\n}\n\nexport default {\n  post(url, data, noNeed) {\n    let _header = {};\n\n    if (noNeed) {\n      _header = {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Content-Type': 'application/json'\n      };\n    } else {\n      _header = {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + sessionStorage.getItem('token')\n      };\n    }\n\n    return axios({\n      method: 'post',\n      url,\n      data: data,\n      timeout: 30000,\n      headers: _header\n    }).then(checkStatus).then(checkCode);\n  },\n\n  get(url, params, noNeed) {\n    let _header = {};\n\n    if (noNeed) {\n      _header = {\n        'X-Requested-With': 'XMLHttpRequest'\n      };\n    } else {\n      _header = {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Authorization': 'Bearer ' + sessionStorage.getItem('token')\n      };\n    }\n\n    return axios({\n      method: 'get',\n      url,\n      params,\n      timeout: 30000,\n      headers: _header\n    }).then(checkStatus).then(checkCode);\n  }\n\n};","map":{"version":3,"sources":["/Users/nuoee/Desktop/react-demo/src/utils/http.js"],"names":["axios","defaults","baseURL","headers","common","Date","getTime","interceptors","request","use","config","error","Promise","reject","response","resolve","withCredentials","checkStatus","status","data","code","message","statusText","checkCode","res","post","url","noNeed","_header","sessionStorage","getItem","method","timeout","then","get","params"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyB,kCAAzB;AACAF,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,MAA9B,IAAwC,IAAIC,IAAJ,GAAWC,OAAX,EAAxC;AAEAN,KAAK,CAACO,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,MAAM,IAAI;AACvC,SAAOA,MAAP;AACD,CAFD,EAEGC,KAAK,IAAI;AACV,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAJD;AAMAX,KAAK,CAACO,YAAN,CAAmBO,QAAnB,CAA4BL,GAA5B,CAAgCK,QAAQ,IAAIA,QAA5C,EAAsDH,KAAK,IAAIC,OAAO,CAACG,OAAR,CAAgBJ,KAAK,CAACG,QAAtB,CAA/D;AACAd,KAAK,CAACC,QAAN,CAAee,eAAf,GAAiC,KAAjC;;AACA,SAASC,WAAT,CAAsBH,QAAtB,EAAgC;AAC9B,MAAIA,QAAQ,CAACI,MAAT,KAAoB,GAApB,IAA2BJ,QAAQ,CAACI,MAAT,KAAoB,GAAnD,EAAwD;AACtD,WAAOJ,QAAQ,CAACK,IAAhB;AACD;;AACD,SAAO;AACLC,IAAAA,IAAI,EAAE,CAAC,GADF;AAELC,IAAAA,OAAO,EAAEP,QAAQ,CAACQ,UAFb;AAGLH,IAAAA,IAAI,EAAEL,QAAQ,CAACQ;AAHV,GAAP;AAKD;;AAED,SAASC,SAAT,CAAoBC,GAApB,EAAyB;AACvB,MAAIA,GAAG,CAACJ,IAAJ,KAAa,GAAb,IAAoBI,GAAG,CAACH,OAA5B,EAAqC,CACpC;;AACD,SAAOG,GAAP;AACD;;AAED,eAAe;AACbC,EAAAA,IAAI,CAAEC,GAAF,EAAOP,IAAP,EAAaQ,MAAb,EAAqB;AACvB,QAAIC,OAAO,GAAG,EAAd;;AACA,QAAID,MAAJ,EAAY;AACVC,MAAAA,OAAO,GAAG;AACR,4BAAoB,gBADZ;AAER,wBAAgB;AAFR,OAAV;AAID,KALD,MAKO;AACLA,MAAAA,OAAO,GAAG;AACR,4BAAoB,gBADZ;AAER,wBAAgB,kBAFR;AAGR,yBAAiB,YAAYC,cAAc,CAACC,OAAf,CAAuB,OAAvB;AAHrB,OAAV;AAKD;;AACD,WAAO9B,KAAK,CAAC;AACX+B,MAAAA,MAAM,EAAE,MADG;AAEXL,MAAAA,GAFW;AAGXP,MAAAA,IAAI,EAAEA,IAHK;AAIXa,MAAAA,OAAO,EAAE,KAJE;AAKX7B,MAAAA,OAAO,EAAEyB;AALE,KAAD,CAAL,CAMJK,IANI,CAMChB,WAND,EAMcgB,IANd,CAMmBV,SANnB,CAAP;AAOD,GAtBY;;AAuBbW,EAAAA,GAAG,CAAER,GAAF,EAAOS,MAAP,EAAeR,MAAf,EAAuB;AACxB,QAAIC,OAAO,GAAG,EAAd;;AACA,QAAID,MAAJ,EAAY;AACVC,MAAAA,OAAO,GAAG;AACR,4BAAoB;AADZ,OAAV;AAGD,KAJD,MAIO;AACLA,MAAAA,OAAO,GAAG;AACR,4BAAoB,gBADZ;AAER,yBAAiB,YAAYC,cAAc,CAACC,OAAf,CAAuB,OAAvB;AAFrB,OAAV;AAID;;AACD,WAAO9B,KAAK,CAAC;AACX+B,MAAAA,MAAM,EAAE,KADG;AAEXL,MAAAA,GAFW;AAGXS,MAAAA,MAHW;AAIXH,MAAAA,OAAO,EAAE,KAJE;AAKX7B,MAAAA,OAAO,EAAEyB;AALE,KAAD,CAAL,CAMJK,IANI,CAMChB,WAND,EAMcgB,IANd,CAMmBV,SANnB,CAAP;AAOD;;AA1CY,CAAf","sourcesContent":["import axios from 'axios'\naxios.defaults.baseURL = 'https://trade.cryptool.net:8088/'\naxios.defaults.headers.common['time'] = new Date().getTime()\n\naxios.interceptors.request.use(config => {\n  return config\n}, error => {\n  return Promise.reject(error)\n})\n\naxios.interceptors.response.use(response => response, error => Promise.resolve(error.response))\naxios.defaults.withCredentials = false\nfunction checkStatus (response) {\n  if (response.status === 200 || response.status === 304) {\n    return response.data\n  }\n  return {\n    code: -404,\n    message: response.statusText,\n    data: response.statusText\n  }\n}\n\nfunction checkCode (res) {\n  if (res.code !== 200 && res.message) {\n  }\n  return res\n}\n\nexport default {\n  post (url, data, noNeed) {\n    let _header = {}\n    if (noNeed) {\n      _header = {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Content-Type': 'application/json'\n      }\n    } else {\n      _header = {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + sessionStorage.getItem('token')\n      }\n    }\n    return axios({\n      method: 'post',\n      url,\n      data: data,\n      timeout: 30000,\n      headers: _header\n    }).then(checkStatus).then(checkCode)\n  },\n  get (url, params, noNeed) {\n    let _header = {}\n    if (noNeed) {\n      _header = {\n        'X-Requested-With': 'XMLHttpRequest'\n      }\n    } else {\n      _header = {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Authorization': 'Bearer ' + sessionStorage.getItem('token')\n      }\n    }\n    return axios({\n      method: 'get',\n      url,\n      params,\n      timeout: 30000,\n      headers: _header\n    }).then(checkStatus).then(checkCode)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}