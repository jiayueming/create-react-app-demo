{"ast":null,"code":"import _objectSpread from \"/Users/nuoee/Desktop/react-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport http from '../utils/http';\nconst ORDER_ID = 'ORDER_ID';\nconst REFRESH_PRICE = 'REFRESH_PRICE';\nconst PROPERTY_LIST = 'PROPERTY_LIST';\nimport { Map } from 'redux-immutable';\nconst initState = Map({\n  orderId: '',\n  isRefresh: false,\n  propertyList: []\n});\nexport function exchange(state = initState, action) {\n  switch (action.type) {\n    case ORDER_ID:\n      return _objectSpread({}, state, {\n        orderId: action.payload.orderId\n      });\n\n    case REFRESH_PRICE:\n      return _objectSpread({}, state, {\n        isRefresh: action.payload.isRefresh\n      });\n\n    case PROPERTY_LIST:\n      console.log(action.payload);\n      return state.set('propertyList', action.payload.propertyList);\n    // return {...state,propertyList:action.payload.propertyList}\t\n\n    default:\n      return state;\n  }\n}\n\nfunction saveOrderId(orderId) {\n  return {\n    type: ORDER_ID,\n    payload: {\n      orderId\n    }\n  };\n}\n\nfunction refreshPrice(isRefresh) {\n  return {\n    type: REFRESH_PRICE,\n    payload: {\n      isRefresh\n    }\n  };\n} // {}和没有的区别\n\n\nfunction propertyList(propertyList) {\n  return {\n    type: PROPERTY_LIST,\n    payload: {\n      propertyList\n    }\n  };\n} // actions\n\n\nexport function saveList(data) {\n  return dispatch => {\n    dispatch(propertyList(data));\n    dispatch(refreshPrice(true));\n  };\n}\nexport function createOrder(data) {\n  return async dispatch => {\n    http.post('exchange-trade-server/order/createOrder', data).then(res => {\n      if (res.code === 200) {\n        dispatch(saveOrderId(res.data.data));\n        this.props.history.push('/pay');\n      } else if (res.code === -1) {\n        dispatch(saveOrderId('270'));\n      } else if (res.code === -8) {\n        dispatch(refreshPrice(true));\n      } else if (res.code === -10) {\n        console.log('去登陆', res.code);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["/Users/nuoee/Desktop/react-demo/src/redux/exchange.redux.js"],"names":["http","ORDER_ID","REFRESH_PRICE","PROPERTY_LIST","Map","initState","orderId","isRefresh","propertyList","exchange","state","action","type","payload","console","log","set","saveOrderId","refreshPrice","saveList","data","dispatch","createOrder","post","then","res","code","props","history","push"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,aAAa,GAAG,eAAtB;AACA,SAAQC,GAAR,QAAkB,iBAAlB;AACA,MAAMC,SAAS,GAAGD,GAAG,CAAC;AACrBE,EAAAA,OAAO,EAAE,EADY;AAErBC,EAAAA,SAAS,EAAE,KAFU;AAGrBC,EAAAA,YAAY,EAAE;AAHO,CAAD,CAArB;AAMA,OAAO,SAASC,QAAT,CAAkBC,KAAK,GAACL,SAAxB,EAAmCM,MAAnC,EAA0C;AAChD,UAAOA,MAAM,CAACC,IAAd;AACC,SAAKX,QAAL;AACC,+BAAWS,KAAX;AAAiBJ,QAAAA,OAAO,EAACK,MAAM,CAACE,OAAP,CAAeP;AAAxC;;AACD,SAAKJ,aAAL;AACC,+BAAWQ,KAAX;AAAiBH,QAAAA,SAAS,EAACI,MAAM,CAACE,OAAP,CAAeN;AAA1C;;AACD,SAAKJ,aAAL;AACCW,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,OAAnB;AACA,aAAOH,KAAK,CAACM,GAAN,CAAU,cAAV,EAA0BL,MAAM,CAACE,OAAP,CAAeL,YAAzC,CAAP;AACA;;AACD;AACC,aAAOE,KAAP;AAVF;AAYA;;AACD,SAASO,WAAT,CAAqBX,OAArB,EAA6B;AAC5B,SAAO;AAACM,IAAAA,IAAI,EAAEX,QAAP;AAAiBY,IAAAA,OAAO,EAAC;AAACP,MAAAA;AAAD;AAAzB,GAAP;AACA;;AACD,SAASY,YAAT,CAAsBX,SAAtB,EAAgC;AAC/B,SAAO;AAACK,IAAAA,IAAI,EAAEV,aAAP;AAAsBW,IAAAA,OAAO,EAAC;AAACN,MAAAA;AAAD;AAA9B,GAAP;AACA,C,CACD;;;AACA,SAASC,YAAT,CAAsBA,YAAtB,EAAmC;AAClC,SAAO;AAACI,IAAAA,IAAI,EAAET,aAAP;AAAsBU,IAAAA,OAAO,EAAC;AAACL,MAAAA;AAAD;AAA9B,GAAP;AACA,C,CACD;;;AACA,OAAO,SAASW,QAAT,CAAkBC,IAAlB,EAAwB;AAC9B,SAAOC,QAAQ,IAAE;AAChBA,IAAAA,QAAQ,CAACb,YAAY,CAACY,IAAD,CAAb,CAAR;AACAC,IAAAA,QAAQ,CAACH,YAAY,CAAC,IAAD,CAAb,CAAR;AACA,GAHD;AAKA;AACD,OAAO,SAASI,WAAT,CAAqBF,IAArB,EAA0B;AAChC,SAAO,MAAMC,QAAN,IAAgB;AAChBrB,IAAAA,IAAI,CAACuB,IAAL,CAAU,yCAAV,EAAqDH,IAArD,EAA2DI,IAA3D,CAAgEC,GAAG,IAAI;AACrE,UAAIA,GAAG,CAACC,IAAJ,KAAa,GAAjB,EAAsB;AAC1BL,QAAAA,QAAQ,CAACJ,WAAW,CAACQ,GAAG,CAACL,IAAJ,CAASA,IAAV,CAAZ,CAAR;AACA,aAAKO,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,MAAxB;AACA,OAHI,MAGE,IAAIJ,GAAG,CAACC,IAAJ,KAAa,CAAC,CAAlB,EAAqB;AAC3BL,QAAAA,QAAQ,CAACJ,WAAW,CAAC,KAAD,CAAZ,CAAR;AACA,OAFM,MAEA,IAAIQ,GAAG,CAACC,IAAJ,KAAa,CAAC,CAAlB,EAAqB;AAC3BL,QAAAA,QAAQ,CAACH,YAAY,CAAC,IAAD,CAAb,CAAR;AACK,OAFC,MAEK,IAAIO,GAAG,CAACC,IAAJ,KAAa,CAAC,EAAlB,EAAsB;AAC3BZ,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBU,GAAG,CAACC,IAAvB;AACD;AACF,KAXD;AAYN,GAbD;AAcA","sourcesContent":["import http from '../utils/http'\nconst ORDER_ID = 'ORDER_ID'\nconst REFRESH_PRICE = 'REFRESH_PRICE'\nconst PROPERTY_LIST = 'PROPERTY_LIST'\nimport {Map} from 'redux-immutable'\nconst initState = Map({\n\torderId: '',\n\tisRefresh: false,\n\tpropertyList: []\n})\n\nexport function exchange(state=initState, action){\n\tswitch(action.type){\n\t\tcase ORDER_ID:\n\t\t\treturn {...state,orderId:action.payload.orderId}\n\t\tcase REFRESH_PRICE:\n\t\t\treturn {...state,isRefresh:action.payload.isRefresh}\n\t\tcase PROPERTY_LIST:\n\t\t\tconsole.log(action.payload)\n\t\t\treturn state.set('propertyList', action.payload.propertyList)\n\t\t\t// return {...state,propertyList:action.payload.propertyList}\t\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\nfunction saveOrderId(orderId){\n\treturn {type: ORDER_ID, payload:{orderId}}\n}\nfunction refreshPrice(isRefresh){\n\treturn {type: REFRESH_PRICE, payload:{isRefresh}}\n}\n// {}和没有的区别\nfunction propertyList(propertyList){\n\treturn {type: PROPERTY_LIST, payload:{propertyList}}\n}\n// actions\nexport function saveList(data) {\n\treturn dispatch=>{\n\t\tdispatch(propertyList(data))\n\t\tdispatch(refreshPrice(true))\n\t}\n\n}\nexport function createOrder(data){\n\treturn async dispatch=>{\n        http.post('exchange-trade-server/order/createOrder', data).then(res => {\n          if (res.code === 200) {\n\t\t\t\t\t\tdispatch(saveOrderId(res.data.data))\n\t\t\t\t\t\tthis.props.history.push('/pay')\n\t\t\t\t\t} else if (res.code === -1) {\n\t\t\t\t\t\tdispatch(saveOrderId('270'))\n\t\t\t\t\t} else if (res.code === -8) {\n\t\t\t\t\t\tdispatch(refreshPrice(true))\n          } else if (res.code === -10) {\n            console.log('去登陆', res.code)\n          }\n        })\n\t}\n}"]},"metadata":{},"sourceType":"module"}